// Package oapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.3 DO NOT EDIT.
package oapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xXW2/cRBT+K9aBR1NvaeDBby2pQp5ApREPVR6G9cnuVLbHnZktrKKVsA20aYOIAiQK",
	"BXFRSMtFUVG5FAjlx0x2Ff4FmpndrBN7s0HdhlTqm2X73L7znfPNLEKdRQmLMZYC/EUQ9SZGxDy+wpFI",
	"nBPIL+G1FgqpXyacJcglRfMLRoSG+iFAUec0kZTF4IPKv1b5jsp/UNk3Kl9S+Y8q+x1cWGA8IhL8vp0L",
	"sp0g+CAkp3EDOi7EJMIqf1vaX/aryne6Kx+WDTsucLzWohwD8K9YL24/yvz+3+ytq1iXOsxFzhkvl1Nn",
	"QVX07J7KvzMJPDBlLVVlHqEQpHGkuUYlV9mfxtXDsVUMPFYV8CqGIbuEImGxwHIhI5Mxds6bjIeBM8l8",
	"5pLgKeJKOX2BVXQwAxCcl+Uou3993ru50lv/treRFZPVKLwgqaFfKeGJI0CDo+ufnS66obF8eWrohsYS",
	"G8gfA0kXWqbtlQj17vzcW7v/nxA6xDcagDtulLUNjReYnd5YkrpJxRYE0xgx5zKSSOd6ML3XEozPvz7r",
	"6JF3GhgjJ/qLE2iTt6lsOjPMIXHgXG4n+IYx1AlTGWLBeoaFJG4U/nF0SHDhOnJhA509UztT0/FZgjFJ",
	"KPhwzrxyISGyaYjm4TskSkIUXlPPp37VQHnk9Kpsde/vT1S6obJfVP5A5euGQPfM85LKv1DZpnm+CSa0",
	"LW82AB9mUBpHoOG2G8Rk8WKtNoARYxOdJElI68bSuyp0CgOB0E/Pc1wAH57zhgri9eXDO7ifTJtGlmIa",
	"L1pRRHj70BcXJGkITYaLFiGY1z97LYFcjISpSNzdh+/ubd1V2Wr3o7Xuo3WVrqv0kUo3qlCZM14fExUq",
	"MRLj4DH7ZriICOekXYVSuRJt9dIEG2WVsCq05tWOyldMAn0JO9SqCqDTbQt0oXWm2PmOCwkTVYti7b7p",
	"yntFbypbtSt2dMOGxxOwewOFvMCC9sSgKZ9/OgdXlOQt7JTocnZiCViWlFszQOZTlS2r9MsibpoeUydC",
	"D02M71V+w4T+TeV39bYZ8uSUslSl2xa9Mj/394q3SIOO5WmIcoww6s2ydOufjc3RRJ02bvpETQgnEUqz",
	"vq4sAtX+tA4MpM63sneQZG4BprFy3pkvUXKqXINNuru9vPvHB5Y0UydBmmInlve2bqt0U6W3VXbLYHdH",
	"ZR+fZupY0KpWW6UOzU6rbLW3fKO7/Zlhx9Zh4hxPki60zTnuf2FO7YkvsyImvfz97lc/PaPjcek4Wmlb",
	"Y45FFmlNT3NMH83B4cXuBCk4eS0v30+PpeVPnv4D/E+3lj8bx2OMo21lxcFCGyG/PhibFg/Bh6aUie95",
	"IauTsMmE9M/VajVPXxD1DPRd7N9kB9efjrv/yjJqvvNvAAAA//+809K/whMAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
